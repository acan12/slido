/ = render "form" #OLD
= render 'slides_presentation_form' 
= render 'slides_dashboard' 

= content_for :scripts do
  :javascript
    $(function(){
      var pid = $("#upload-panel").attr("pid");
      var $files = ""

      
      $("#caption-ok").click(function(){
        alert("caption ok clicked .")
      });
      
      $("#input-file").change(function(){
        $files = $("#input-file")[0].files
        $(".image-preview-filename").val($files[0].name)
        
      });
      
      $("#drop-zone").filedrop({
        url: "/posts",
        paramname: "post[image]",
        data: { post: {presentation_id: pid } },
        maxfilesize: 100,
        dragOver: function(){
          $(this).addClass("drop")
        },
        dragLeave: function(){
          $(this).removeClass("drop");
        },
        progressUpdated: function(i, file, progress) {
          $('#progressbar').width(progress+"%");
          $('#progressbar > span').text(progress+"% Complete");
        },
        afterAll: function(){
          location.reload();
        }
      });
      
      
      $("#btn-upload").click(function(e){
          e.preventDefault();
          
          var pictureBase64 = ""
        
          // stop if no reference file path
          if($files == undefined && $files.length == 0){ 
            alert("Please pick the file to upload."); 
            return; 
          } 
        
          if (/^image/.test( $files[0].type)){ // only image file
              var reader = new FileReader(); // instance of the FileReader
              reader.readAsDataURL($files[0]); // read the local file

              reader.onloadend = function(){ // set image data as background of div
                  //put base64 image into attribute element
                  console.log("base64: "+this.result)
                  
                  $.ajax({
                    url: "/posts",
                    type: "POST",
                    data: {
                      post: { presentation_id: pid, image: this.result }
                    },
                    success: function(e){
                      location.reload();
                    },
                    xhr: function() {
                        myXhr = $.ajaxSettings.xhr();
                        if(myXhr.upload){
                            myXhr.upload.addEventListener('progress',showProgress, false);
                        } else {
                            console.log("Uploadress is not supported.");
                        }
                        return myXhr;
                    }
                  });
                  
                  
              };
              
              
              
          };
          
          
      });
      
      function showProgress(evt) {
        if(evt.lengthComputable){
            var percentComplete = (evt.loaded / evt.total) * 100;
            $('#progressbar').width(percentComplete+"%");
            $('#progressbar > span').text(percentComplete+"% Complete");
        }
      }
      
      
    });



